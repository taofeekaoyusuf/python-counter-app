# Creating ReplicaSet
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: python-counter-app
  namespace: python-counter-app
spec:
  replicas: { { .Values.replicaCount } }
  selector:
    matchLabels:
      app: klein
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: klein
    spec:
      containers:
        - name: python-counter-app
          image: dhackbility/python-counter-app:1.0.0
          ports:
            - name: http
              containerPort: 80
          imagePullPolicy: IfNotPresent
          env:
            - name: http
              value: "8081"
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
              hostPort: 8081
          volumeMounts:
            - name: config-volume
              mountPath: /config
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
              scheme: HTTP
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
              scheme: HTTP
          resources:
            requests:
              cpu: "2000m"
              memory: "700Mi"
            limits:
              cpu: "3000m"
              memory: "1300Mi"
      dnsPolicy: Default
      volumes:
        - name: config-volume
          configMap:
            name: application-settings
